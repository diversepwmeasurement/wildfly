concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref
    || github.ref }}
env:
  EVENT_TYPE: trigger-cloud-tests-run
  REPOSITORY: wildfly-extras/wildfly-cloud-tests
  RESULT_INITIAL_WAIT_SECONDS: 1200
  RESULT_MAX_POLL_ATTEMPTS: 10
  RESULT_POLL_WAIT_SECONDS: 300
  STATUS_BRANCH: run-status
  TOKEN: ${{ secrets.REMOTE_DISPATCH_TOKEN }}
jobs:
  run-tests:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: ${{ env.TOKEN }}
      name: Checkout run-status branch
      uses: actions/checkout@v4
      with:
        ref: ${{ env.STATUS_BRANCH }}
        repository: ${{ env.REPOSITORY }}
    - continue-on-error: true
      if: ${{ env.TOKEN }}
      name: Remote Dispatch
      run: "echo $GITHUB_REPOSITORY\nFILENAME=\"$GITHUB_RUN_ID-$GITHUB_RUN_NUMBER-$GITHUB_RUN_ATTEMPT.json\"\
        \necho \"FILENAME=$FILENAME\" >> $GITHUB_ENV\n\nREFERENCE=\"refs/pull/${{github.event.number}}/merge\"\
        \n\nCLIENT_PAYLOAD=$( jq -n \\\n        --arg tr \"$GITHUB_REPOSITORY\" \\\
        \n        --arg ref \"$REFERENCE\" \\\n        --arg sf \"$FILENAME\" \\\n\
        \        '{triggerRepo: $tr, ref: $ref, statusFile: $sf}' )\n\necho \"CLIENT_PAYLOAD:\
        \ $CLIENT_PAYLOAD\"\n\nresp=$(curl -X POST -s \"https://api.github.com/repos/${REPOSITORY}/dispatches\"\
        \ \\\n    -H \"Accept: application/vnd.github.v3+json\" \\\n    -H \"Content-Type:\
        \ application/json\" \\\n    -H \"Authorization: Bearer ${TOKEN}\" \\\n  \
        \  -d \"{\\\"event_type\\\": \\\"${EVENT_TYPE}\\\", \\\"client_payload\\\"\
        : ${CLIENT_PAYLOAD} }\")\nif [ -z \"$resp\" ]\nthen\n  sleep 2\nelse\n  echo\
        \ \"Workflow failed to trigger\"\n  echo \"$resp\"\n  exit 1\nfi\n"
    - continue-on-error: true
      if: ${{ env.TOKEN }}
      name: Wait for remote job completion
      run: "echo \"Waiting/polling for remote test execution to complete\"\necho \"\
        Sleeping $RESULT_INITIAL_WAIT_SECONDS seconds before polling\"\nsleep $RESULT_INITIAL_WAIT_SECONDS\n\
        i=0\nwhile [[ \"${RESULT}\" != '0' ]]\ndo\n  echo \"debug - fetching\"\n \
        \ git fetch origin\n  echo \"debug - resetting\"\n  git reset --hard origin/$STATUS_BRANCH\n\
        \n  echo \"debug - is $FILENAME there?\"\n  # Check file is there and break\
        \ if it is\n  if [ -f \"$FILENAME\" ]; then\n    echo \"debug - file is there\"\
        \n    break\n  fi\n\n\n  echo \"debug - incrementing counter\"\n  i=$((i+1))\n\
        \  echo \"debug - checking max poll attempts\"\n  if [ $i -eq $RESULT_MAX_POLL_ATTEMPTS\
        \ ]; then\n    1>&2 echo \"Timeout receiving the results\"\n    exit 1\n \
        \ fi\n  echo \"Sleeping $RESULT_POLL_WAIT_SECONDS seconds before polling again\"\
        \n  sleep $RESULT_POLL_WAIT_SECONDS\ndone\n# cat $FILENAME\nSTATUS=\"$(jq\
        \ -r .status $FILENAME)\"\nMESSAGE=\"$(jq -r .message $FILENAME)\"\n\n# echo\
        \ \"Status: $STATUS\"\n\nif [[ \"${STATUS}\" == \"failed\" ]]; then\n  echo\
        \ -e \"\\e[31m${MESSAGE}\\e[0m\"\n  exit 1\nfi\n\necho -e \"\\e[32m${MESSAGE}\\\
        e[0m\"\n"
name: Cloud Tests Trigger
on:
  repository_dispatch:
    types: trigger-ga___cloud-test-pr-trigger.yml
permissions: {}
