env:
  ADDITIONAL_BUILD_MODULES: boms/common-ee,boms/common-expansion,boms/standard-ee,boms/standard-expansion,boms/standard-test
  MODULES_TO_CHECK: ee-feature-pack/galleon-shared,ee-feature-pack/galleon-local,galleon-pack/galleon-shared,galleon-pack/galleon-local,galleon-pack,ee-feature-pack/common,microprofile/galleon-common,servlet-feature-pack/common,elytron-oidc-client/galleon-common
jobs:
  check:
    env:
      ARTIFACTS: .pr_artifacts
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: prepare
      name: Prepare
      run: '# Make ARTIFACTS absolute

        ARTIFACTS="${GITHUB_WORKSPACE}/${ARTIFACTS}"

        echo "ARTIFACTS=${ARTIFACTS}" >> $GITHUB_ENV


        mkdir ${ARTIFACTS}

        echo ${{ github.event.number }} > "${ARTIFACTS}/pr"


        echo "base=${GITHUB_BASE_REF}" >> $GITHUB_OUTPUT

        echo "artifacts=${ARTIFACTS}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      name: Clone base version
      uses: actions/checkout@v4
      with:
        path: base
        ref: ${{ steps.prepare.outputs.base }}
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Clone PR version
      uses: actions/checkout@v4
      with:
        path: pr
    - continue-on-error: true
      name: Find valid base modules to check
      run: "i=0\nvalidBaseModules=\"\"\nfor module in $(echo \"${MODULES_TO_CHECK}\"\
        \ | sed \"s/,/ /g\")\ndo\n  if [ -d ${module} ]; then\n    if [ $i -gt 0 ];\
        \ then\n      validBaseModules=\"${validBaseModules},${module}\"\n    else\n\
        \      validBaseModules=\"${module}\"\n    fi\n    i=$((i + 1))\n  fi\ndone\n\
        echo \"validBaseModules=\"$validBaseModules\necho \"validBaseModules=${validBaseModules}\"\
        \ >> $GITHUB_ENV\n"
      working-directory: base
    - continue-on-error: true
      name: Find valid base additional modules
      run: "i=0\nvalidAddlBaseModules=\"\"\nfor module in $(echo \"${ADDITIONAL_BUILD_MODULES}\"\
        \ | sed \"s/,/ /g\")\ndo\n  if [ -d ${module} ]; then\n    if [ $i -gt 0 ];\
        \ then\n      validAddlBaseModules=\"${validAddlBaseModules},${module}\"\n\
        \    else\n      validAddlBaseModules=\"${module}\"\n    fi\n    i=$((i +\
        \ 1))\n  fi\ndone\necho \"validAddlBaseModules=\"validAddlBaseModules\necho\
        \ \"validAddlBaseModules=${validAddlBaseModules}\" >> $GITHUB_ENV\n"
      working-directory: base
    - continue-on-error: true
      name: Find valid PR modules to check
      run: "i=0\nvalidPRModules=\"\"\nfor module in $(echo \"${MODULES_TO_CHECK}\"\
        \ | sed \"s/,/ /g\")\ndo\n  if [ -d ${module} ]; then\n    if [ $i -gt 0 ];\
        \ then\n      validPRModules=\"${validPRModules},${module}\"\n    else\n \
        \     validPRModules=\"${module}\"\n    fi\n    i=$((i + 1))\n  fi\ndone\n\
        echo \"validPRModules=\"$validPRModules\necho \"validPRModules=${validPRModules}\"\
        \ >> $GITHUB_ENV\n"
      working-directory: pr
    - continue-on-error: true
      name: Find valid pr additional modules
      run: "i=0\nvalidAddlPRModules=\"\"\nfor module in $(echo \"${ADDITIONAL_BUILD_MODULES}\"\
        \ | sed \"s/,/ /g\")\ndo\n  if [ -d ${module} ]; then\n    if [ $i -gt 0 ];\
        \ then\n      validAddlPRModules=\"${validAddlPRModules},${module}\"\n   \
        \ else\n      validAddlPRModules=\"${module}\"\n    fi\n    i=$((i + 1))\n\
        \  fi\ndone\necho \"validAddlPRModules=\"validAddlPRModules\necho \"validAddlPRModules=${validAddlPRModules}\"\
        \ >> $GITHUB_ENV\n"
      working-directory: pr
    - continue-on-error: true
      name: Build base
      run: 'mvn -B -ntp install -DskipTests -pl ${{ env.validBaseModules }},${{ env.validAddlBaseModules
        }} -am

        '
      working-directory: base
    - continue-on-error: true
      id: base-versions
      name: Grab base dependencies
      run: "i=0\nbaseVersionFiles=\"\"\nfor module in $(echo \"${{ env.validBaseModules\
        \ }}\" | sed \"s/,/ /g\")\ndo\n  baseVersionFile=\"_base-versions-$i.txt\"\
        \n  mvn -B -ntp dependency:tree -pl \"${module}\" -DoutputFile=\"${ARTIFACTS}/${baseVersionFile}\"\
        \ || exit 1\n\n  if [ $i -gt 0 ]; then\n    baseVersionFiles=\"${baseVersionFiles},${baseVersionFile}\"\
        \n  else\n    baseVersionFiles=\"${baseVersionFile}\"\n  fi\n  i=$((i + 1))\n\
        done\necho \"${baseVersionFiles}\" > ${ARTIFACTS}/baseVersions\n"
      working-directory: base
    - continue-on-error: true
      name: Build PR
      run: 'echo "validPRModules="$validPRModules

        echo "env.validPRModules="${{ env.validPRModules }}

        mvn -B -ntp install -DskipTests -pl ${{ env.validPRModules }},${{ env.validAddlPRModules
        }} -am

        '
      working-directory: pr
    - continue-on-error: true
      id: new-versions
      name: Grab PR Dependencies
      run: "i=0\nnewVersionFiles=\"\"\nfor module in $(echo \"${{ env.validPRModules\
        \ }}\" | sed \"s/,/ /g\")\ndo\n  newVersionFile=\"_new-versions-$i.txt\"\n\
        \  mvn -B -ntp dependency:tree -pl \"${module}\" -DoutputFile=\"${ARTIFACTS}/${newVersionFile}\"\
        \ || exit 1\n\n  if [ $i -gt 0 ]; then\n    newVersionFiles=\"${newVersionFiles},${newVersionFile}\"\
        \n  else\n    newVersionFiles=\"${newVersionFile}\"\n  fi\n  i=$((i + 1))\n\
        done\necho \"${newVersionFiles}\" > ${ARTIFACTS}/newVersions\n"
      working-directory: pr
    - continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        name: input-artifacts
        path: ${{ steps.prepare.outputs.artifacts }}
name: Dependency Tree Input Builder
on:
  repository_dispatch:
    types: trigger-ga___dep-diff-pull_request.yml
